:root {
  --highlight-bgcolor: #5d8fac;
  --highlight-color: white;
  --disabled-text-color: #aaa;
}

.tree {
  /* Units in CSS: https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Values_and_units */
  font-size: 1rem;
  font-family: helvetica, arial, sans-serif;
  line-height: 1.4;
  margin: 12px auto 12px auto;
  /* Optimal width of text in a column: https://ux.stackexchange.com/a/3623 
     75ch + 2*5ch overhead
  */
  max-width: 85ch;
  /* Make sure that we have room for the controls on the left as long as
     we don't go responsive small */
  padding-left: 5ch;
  padding-right: 5ch;
}

.tree input {
  /* By default input fields do not inherit font features */
  font-size: inherit;
  font-family: inherit;
}

.tree button,
.tree input[type=file] {
  font-weight: bold;
  padding: 6px 12px 6px 12px;
  border: none;
  background-color: #e0e1e2;
  color: rgba(0,0,0,.8);
  border-radius: 3px;
}

.tree button:disabled,
.tree button.primary:disabled,
.tree input[type=file]:disabled {
  background-color: #e0e1e2;
  color: rgba(0,0,0,.4);
}

.tree button.primary {
  background-color: #2185d0;
  color: rgba(255, 255, 255, 0.9);
}

.tree fieldset {
  border: none;
  padding: 0;
  margin: inherit;
}

.tree fieldset label {
  line-height: 1.4;
}

.breadcrumbs {
  padding: 0 6px 0 6px;
  margin: 6px 0 12px 0;
}

.breadcrumbs > span::after {
  content: ' / ';
}

.breadcrumbs a {
  color: #29526D;
}

.searchbox {
  padding: 0;
  margin: 6px 0 12px 0;
  /* Flex layout for the input field and the activity spinner */
  display: flex;
}

.searchbox input[type=search] {
  flex-grow: 1;
  margin-right: 6px;
  border-width: 1px;
  border-radius: 3px;
  border-top: none;
  border-left: none;
  border-right: none;
  height: 2em;
}

.node {
  display: block;
}

.node .nc {
  position: relative;
  width: 100%;
  /* We need a longer line to hover over to show the node controls, including the whitespace
     to the left of the node so we add negative margin and fill it back up with padding so 
     the element is wider. */
  margin-left: -40ch;
  padding-left: 40ch;
}

.node .nc:hover .toggle,
.node .nc:hover .menuTrigger,
.node .name:focus ~ .toggle,
.node .name:focus ~ .menuTrigger {
  display: block;
}

/* Override selector for the previous rule: if the toggle is hidden, we don't show it (this is for nodes with no children) */
.node .nc:hover .toggle.hidden,
.node .name:focus ~ .toggle.hidden {
  display: none;
}

.nc > a {
  display: inline-block;
  position: absolute;
  /* padding: 0 9px 0 9px; */
  text-decoration: none;
  /* width: 2ch; */
  width: 24px;
  height: 24px;
  text-align: center;
}

.nc > a, .nc > a:hover, .nc > a:active, .nc > a:visited {
  color: #666;
}

.nc > a:before {
  content: '●'; /* BLACK CIRCLE, 25CF */
}

.node.closed > .nc > a:before {
  /* content: '⬤'; */ /* &#11044; */
  /* content: '⭗'; */ /* U+2B57 */
  /* content: '◎'; */ /* &#x25CE; */
  /* content: '◯'; */
  /* content: '○';  */
  /* content: '◯'; */ /* &#x25EF;	*/
  content: '◉	'; /* FISHEYE &#x25C9; */
  color: #666;
}

.nc > a:hover:before, .node.closed > .nc > a:hover:before {
  color: #666;
  content: '⬤'; /* &#11044; */
}

.node .span.hiddenToggle {
  display: none;
}

.node span.toggle {
  display: none;
  top: 0;
  position: absolute;
  margin-left: -2.5ch;
  /* padding: 0 9px 0 9px; */
  width: 2ch;
  color: #aaa;
  text-align: center;
}

.node.open span.toggle:before {
  content: '−'; /* &#8722; */
}

.node.closed span.toggle:before {
  content: '+';
}

.node span.toggle:hover,
.node span.menuTrigger:hover {
  background: var(--highlight-bgcolor);
  color: var(--highlight-color);
  cursor: pointer;
}

.node span.menuTrigger {
  display: none;
  top: 0;
  position: absolute;
  margin-left: -5ch;
  width: 2ch;
  color: #aaa;
  text-align: center;
}

.node > .nc > a,
.node .toggle,
.node .menuTrigger,
.node .name {
  /* It is crucial that the padding here is on the name of the node itself
     because this makes the name larger and the click area larger. If the
     padding would be on a containing element we would have annoying dead
     zones between elements where you can not click to select an element. */
  padding-top: 4px;
  padding-bottom: 4px;
}

.node .name {
  display: block;
  position: relative;
  /* pre-wrap makes whitespace show up at the beginning and end! required for merging/splitting of nodes */
  white-space: pre-wrap;
  word-wrap: break-word;
  /* min-width (or a similar trick) is required to make the cursor show in Chrome when the element is empty */
  min-width: 20px;
  /* leaves space for the bullet since that is positioned absolute */
  margin-left: calc(2ch + 6px); /* bullet width + the padding */
  padding-right: 6px;
  padding-left: 2px;
}

/*
   This is a kludge for Firefox: when the name div has no content it has zero height, and then
   firefox collapses the element and messes up our layout. Here we just insert a bogus character
   when the element is empty.
*/
.node .name:empty:before {
  content: ' ';
}

.node .name:focus, .node .note:focus {
  outline: none;
  background-color: rgb(240, 240, 240, 0.5);
}

.node .note {
  font-size: 80%;
  color: #555;
  /* pre-wrap makes whitespace show up at the beginning and end! required for merging/splitting of nodes */
  white-space: pre-wrap;
  word-wrap: break-word;
  /* leaves space for the bullet since that is positioned absolute */
  margin-left: calc(1ch + 18px); /* bullet width + the padding */
  /* This is an attempt to make this note be "one line" high when not editing,
     it tries to mimic the set line-height */
  height: 1.4em;
  overflow-y: hidden;
  overflow-x: hidden;
  padding: 0 0 0 2px;
}

.node .note.editing {
  height: auto;
  overflow-y: auto;
}

.node .note:empty {
  display: none;
}

a.embeddedLink {
  cursor: pointer;
}

.filterTag {
  cursor: pointer;
  text-decoration: underline;
  color: rgb(0, 0, 238);
}

.node .children {
  margin-left: 0px;
}

.node.closed .children {
  display: none;
}

.node .children .children {
  margin-left: 24px;
}

/* ROOT node is special, we hide and only show the children */
.node.root > .nc {
  display: none;
}

.node.root > .nc .children {
  margin-left: 0;
}

/* The first node in a tree is special (when not root node), we show it really big, without the star */
.node.first > .nc .name {
  font-size: 150%;
  font-weight: bold;
  margin: 0 0 6px 6px;
}

.node.first > .nc > a, .node.first > .nc .toggle {
  display: none;
}

.node.first > .nc .menuTrigger {
  font-size: 150%;
  margin-left: -2.5ch;
}

/* Completion status */
.node.completed,
.completed-visual-only {
  text-decoration: line-through;
  color: var(--disabled-text-color);
}

.hidden {
  display: none;
}

/* ---------- Dialog ---------- */ 
/* Just the absolute basic styles for a responsive dialog */
.dialog {
  background: white;
  display: none;
  position: fixed;
  z-index: 2; /* dialogs need to be above the overlay */
  border: 1px #d1d1d1 solid;
  border-radius: 3px;
  animation: fadeIn 150ms ease-out;
  box-shadow: 0px 3px 6px rgba(0,0,0,0.2);
  /* To center horizontally and vertically as per https://stackoverflow.com/a/25829529/1996 */
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

@keyframes fadeIn {
  from { opacity: 0; }
    to { opacity: 1; }
}

.dialogOverlay {
  display: none;
  position: fixed;
  z-index: 1; /* overlay is above everything but the dialog itself */
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

.dialog .closeButton {
  position: absolute;
  top: 0;
  right: 0;
  display: none;
  padding: 6px;
  color: #aaa;
  font-size: 1.5rem;
}

.closeButton::before {
  content: '✕';
}

.closeButton:hover {
  cursor: pointer;
}

.menuItem {
  display: block;
  padding: 6px 12px 6px 12px;
  max-width: 300px;
}

.menuItem:hover {
  background-color: var(--highlight-bgcolor);
  color: var(--highlight-color);
  cursor: pointer;
}

.menuItem.disabled,
.menuItem.disabled:hover {
  background-color: inherit;
  color: var(--disabled-text-color);
  cursor: inherit;
}

.dialog header h1 {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 12px;
}

/* ---------- OPML Import component ---------- */ 
tree-opmlimport-dialog {
  width: 400px;
  padding: 6px;
}

tree-opmlimport-dialog .error {
  color: red;
  display: none;
}

tree-opmlimport-dialog .success {
  color: green;
  display: none;
}

tree-opmlimport-dialog input.uploadOpml {
  max-width: 350px;
}

tree-opmlimport-dialog div.error,
tree-opmlimport-dialog div.success,
tree-opmlimport-dialog input.uploadOpml,
tree-opmlimport-dialog button.import,
tree-opmlimport-dialog h1 {
  margin: 6px 12px 6px 12px;
}

/* Spinner Component */

.spinner {
  display: none;
}

.spinner,
.spinner:after {
  border-radius: 50%;
  width: 1em;
  height: 1em;
}
.spinner {
  font-size: 10px;
  position: relative;
  text-indent: -9999em;
  border-top: 0.5em solid rgba(0, 0, 0, 0.2);
  border-right: 0.5em solid rgba(0, 0, 0, 0.2);
  border-bottom: 0.5em solid rgba(0, 0, 0, 0.2);
  border-left: 0.5em solid #ffffff;
  transform: translateZ(0);
  animation: load8 1.1s infinite linear;
}
@-webkit-keyframes load8 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes load8 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


/* From Bootstrap: https://getbootstrap.com/docs/4.3/layout/overview/#responsive-breakpoints */

/* Extra small devices (portrait phones, less than 576px) */
@media (max-width: 575px) {
  .dialog {
    width: 100%;
    height: 100%;
    border: 0;
    padding: 40px 0px 20px 0px;
  }

  .dialog .closeButton {
    position: fixed;
    display: block;
  }

  /* Move the close button to the right on mobile and hide if hidden */
  .node span.toggle {
    margin-left: 0;
    right: 0;
    display: block;
  }
  .node span.toggle.hidden {
    display: none;
  }

  /* Hide the menu on mobile, we will have an alternative */
  .node .nc:hover .menuTrigger,
  .node .name:focus ~ .menuTrigger {
    display: none;
  }

  /* Don't waste horizontal space on mobile */
  .tree {
    padding-left: 0;
    padding-right: 0;
  }  

}

/* Small devices (landscape phones, 576px and up) 
@media (min-width: 576px) { ... }

// Medium devices (tablets, 768px and up)
@media (min-width: 768px) { ... }

// Large devices (desktops, 992px and up)
@media (min-width: 992px) { ... }

// Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) { ... }
*/
