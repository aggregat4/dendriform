:root {
  --highlight-bgcolor: #dddddd;
}

.tree {
  /* Units in CSS: https://developer.mozilla.org/en-US/docs/Learn/CSS/Introduction_to_CSS/Values_and_units */
  font-size: 1rem;
  font-family: helvetica, arial, sans-serif;
  line-height: 1.4;
  margin: 24px auto 24px auto;
  /* Optimal width of text in a column: https://ux.stackexchange.com/a/3623 */
  max-width: 75ch;
  /* This is a hack to make sure the controls are always visible, even when getting really narrow.
     This is stupid for mobile though since we lose all that space. Need a better solution. */
  padding-left: 5ch;
}

.tree input {
  /* By default input fields do not inherit font features */
  font-size: inherit;
  font-family: inherit;
}

.tree button,
.tree input[type=file] {
  font-weight: bold;
  padding: 6px 12px 6px 12px;
  border: none;
  background-color: #e0e1e2;
  color: rgba(0,0,0,.8);
  border-radius: 3px;
}

.tree button:disabled,
.tree button.primary:disabled,
.tree input[type=file]:disabled {
  background-color: #e0e1e2;
  color: rgba(0,0,0,.4);
}

.tree button.primary {
  background-color: #2185d0;
  color: rgba(255, 255, 255, 0.9);
}

.breadcrumbs {
  padding: 0 6px 0 6px;
  margin: 6px 0 12px 0;
}

.breadcrumbs > span::after {
  content: ' / ';
}

.breadcrumbs a {
  color: #29526D;
}

.searchbox {
  padding: 0;
  margin: 6px 0 12px 0;
  /* Flex layout for the input field and the activity spinner */
  display: flex;
}

/* TODO: This is some "fancy" search box styling, not sure I prefer this over standard */
.searchbox input[type=search] {
  flex-grow: 1;
  margin-right: 6px;
  border-width: 1px;
  border-radius: 3px;
  border-top: none;
  border-left: none;
  border-right: none;
}

.node {
  display: block;
  /* This is spacing before a node so that it does not "stick" to the previous one.
     Hard to get the right balance between this and the line-height. */
  margin-top: 4px;
}

.node .nc {
  position: relative;
  width: 100%;
  /* We need a longer line to hover over to show the node controls, including the whitespace
     to the left of the node so we add negative margin and fill it back up with padding so 
     the element is wider. */
  margin-left: -5ch;
  padding-left: 5ch;
}

.node .nc:hover .toggle,
.node .nc:hover .menuTrigger,
.node .name:focus ~ .toggle,
.node .name:focus ~ .menuTrigger {
  display: block;
}

.node a {
  display: inline-block;
  position: absolute;
  /* padding: 0 9px 0 9px; */
  text-decoration: none;
  /* width: 2ch; */
  width: 24px;
  height: 24px;
  text-align: center;
}

.node a, .node a:hover, .node a:active, node a:visited {
  color: #666;
}

.node a:hover, .node.closed a:hover {
  background: rgb(182, 197, 206);
  border-radius: 50%;
}

.node.closed a {
  background: #ddd;
  border-radius: 50%;
}

.node span.toggle {
  display: none;
  top: 0;
  position: absolute;
  margin-left: -2.5ch;
  /* padding: 0 9px 0 9px; */
  width: 2ch;
  color: #aaa;
  text-align: center;
}

.node.open span.toggle:before {
  content: '−'; /* &#8722; */
}

.node.closed span.toggle:before {
  content: '+';
}

.node span.toggle:hover,
.node span.menuTrigger:hover {
  background: rgb(182, 197, 206); /* #c1c1ff; */
  color: white;
  cursor: pointer;
}

.node span.menuTrigger {
  display: none;
  top: 0;
  position: absolute;
  margin-left: -5ch;
  width: 2ch;
  color: #aaa;
  text-align: center;
}

.node .name {
  display: block;
  position: relative;
  /* pre-wrap makes whitespace show up at the beginning and end! required for merging/splitting of nodes */
  white-space: pre-wrap;
  word-wrap: break-word;
  /* min-width (or a similar trick) is required to make the cursor show in Chrome when the element is empty */
  min-width: 20px;
  /* leaves space for the bullet since that is positioned absolute */
  margin-left: calc(2ch + 6px); /* bullet width + the padding */
  padding: 0 6px 0 2px;
}

/* This is a kludge for Firefox: when the name div has no content it has zero height, and then
   firefox collapses the element and messes up our layout. Here we just insert a bogus character
   when the element is empty.

   TODO: fix this in a better way. There is no relative height unit that represents "one line" so
   we can't min-height it. This is also explained here: https://stackoverflow.com/a/23530317 */
.node .name:empty:before {
  content: ' ';
}

.node .name:focus, .node .note:focus {
  outline: none;
  background-color: rgb(243, 235, 214); /* #f5f5aa; */
}

.node .note {
  font-size: 80%;
  color: #555;
  /* pre-wrap makes whitespace show up at the beginning and end! required for merging/splitting of nodes */
  white-space: pre-wrap;
  word-wrap: break-word;
  /* leaves space for the bullet since that is positioned absolute */
  margin-left: calc(1ch + 18px); /* bullet width + the padding */
  /* This is an attempt to make this note be "one line" high when not editing,
     it tries to mimic the set line-height */
  height: 1.4em;
  overflow-y: hidden;
  padding: 0 0 0 2px;
}

.node .note.editing {
  height: auto;
  overflow-y: auto;
}

.node .note:empty {
  display: none;
}

.node .children {
  margin-left: 0px;
}

.node.closed .children {
  display: none;
}

.node .children .children {
  margin-left: 24px;
}

/* ROOT node is special, we hide and only show the children */
.node.root > .nc {
  display: none;
}

.node.root > .nc .children {
  margin-left: 0;
}

/* The first node in a tree is special (when not root node), we show it really big, without the star */
.node.first > .nc .name {
  font-size: 150%;
  font-weight: bold;
  margin: 0 0 6px 6px;
}

.node.first > .nc a, .node.first > .nc .toggle {
  display: none;
}

.node.first > .nc .menuTrigger {
  font-size: 150%;
  margin-left: -2.5ch;
}

.hidden {
  display: none;
}

@keyframes fadeIn {
  from { opacity: 0; }
    to { opacity: 1; }
}

/* Just the absolute basic styles for a responsive dialog */
.dialog {
  background: white;
  display: none;
  position: fixed;
  z-index: 2; /* dialogs need to be above the overlay */
  border-radius: 3px;
  padding: 6px;
  border: 1px #eee solid;
  animation: fadeIn 150ms ease-out;
  box-shadow: 0px 3px 5px rgba(0,0,0,0.2);
  /* To center horizontally and vertically as per https://stackoverflow.com/a/25829529/1996 */
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
}

.dialogOverlay {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
}

.dialog .closeButton {
  position: absolute;
  top: 0;
  right: 0;
  display: none;
  padding: 6px;
  color: #aaa;
  font-size: 1.5rem;
}

.closeButton::before {
  content: '✕';
}

.closeButton:hover {
  cursor: pointer;
}

.menuItem {
  display: block;
  padding: 6px 12px 6px 12px;
}

.menuItem:hover {
  background-color: var(--highlight-bgcolor);
  cursor: pointer;
}

.dialog header h1 {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 12px;
}

tree-opmlimport-dialog {
  width: 400px;
}

tree-opmlimport-dialog .error {
  color: red;
  display: none;
}

tree-opmlimport-dialog .success {
  color: green;
  display: none;
}

tree-opmlimport-dialog input.uploadOpml {
  max-width: 350px;
}

tree-opmlimport-dialog div.error,
tree-opmlimport-dialog div.success,
tree-opmlimport-dialog input.uploadOpml,
tree-opmlimport-dialog button.import,
tree-opmlimport-dialog h1 {
  margin: 6px 12px 6px 12px;
}

/* Spinner Component */

.spinner {
  display: none;
}

.spinner,
.spinner:after {
  border-radius: 50%;
  width: 1em;
  height: 1em;
}
.spinner {
  font-size: 10px;
  position: relative;
  text-indent: -9999em;
  border-top: 0.5em solid rgba(0, 0, 0, 0.2);
  border-right: 0.5em solid rgba(0, 0, 0, 0.2);
  border-bottom: 0.5em solid rgba(0, 0, 0, 0.2);
  border-left: 0.5em solid #ffffff;
  transform: translateZ(0);
  animation: load8 1.1s infinite linear;
}
@-webkit-keyframes load8 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
@keyframes load8 {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


/* From Bootstrap: https://getbootstrap.com/docs/4.3/layout/overview/#responsive-breakpoints */

/* Extra small devices (portrait phones, less than 576px) */
@media (max-width: 575px) {
  .dialog {
    width: 100%;
    height: 100%;
    border: 0;
    padding: 40px 0px 20px 0px;
  }

  .dialog .closeButton {
    position: fixed;
    display: block;
  }

}

/* Small devices (landscape phones, 576px and up) 
@media (min-width: 576px) { ... }

// Medium devices (tablets, 768px and up)
@media (min-width: 768px) { ... }

// Large devices (desktops, 992px and up)
@media (min-width: 992px) { ... }

// Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) { ... }
*/
